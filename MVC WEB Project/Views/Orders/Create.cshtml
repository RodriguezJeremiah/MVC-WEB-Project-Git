@model MVC_WEB_Project.Models.Order

@{
    ViewData["Title"] = "Create";
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+Wy2B3Y2BUHVHwM1c47lbRDXx4jQV4vpcJ2" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.9.1/dist/umd/popper.min.js" integrity="sha384-Zd0Q1UAdI1+g8L1Dp1k6dbWtvxA2msrXzmhPHc8z6jIb9dKEp4FFgVJkXIdbMVa6" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+Wy2B3Y2BUHVHwM1c47lbRDXx4jQV4vpcJ2" crossorigin="anonymous"></script>

<style>
    .table-container {
        margin-top: 20px;
        width: 800px;
    }
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    }
</style>
<div class="container">
    <form asp-action="Create" id="orderForm">
        <div class="row">
            <div class="col-xs-1 text-center">
                <h1>Add an Order</h1>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="OrderNo" class="control-label"></label>
                    <input asp-for="OrderNo" class="form-control" />
                    <span asp-validation-for="OrderNo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input id="orderDateInput" class="form-control" type="date" asp-for="OrderDate" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="CustomerName"></label>
                    <select asp-for="CustomerId" asp-items="ViewBag.Customers" class="form-control"></select>
                </div>
                <div class="form-group">
                    <label asp-for="TotalAmount" class="control-label"></label>
                    <input asp-for="TotalAmount" id="totalAmountInput" class="form-control" readonly/>
                    <span asp-validation-for="TotalAmount" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#addProductModal">Add Product</button>
                </div>
                <div class="table-container">
                    <table class="table" id="orderItemsTable">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total Amount</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-info">Back to List</a>
                </div>

                <!-- Move modal code inside the form -->
                <div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="productId">Product:</label>
                                    <select id="productId" class="form-control" required>
                                        <option value="">Select a Product</option>
                                        @foreach (var product in ViewBag.Products)
                                        {
                                            <option value="@product.Value">@product.Text</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="quantity">Quantity:</label>
                                    <input type="number" id="quantity" class="form-control" min="1" required />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" onclick="addProductFromModal()">Add Product</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [year, month, day].join('-');
    }
    document.getElementById('orderDateInput').value = formatDate(new Date());
</script>
<script>
    function addRow(product, quantity) {
        var table = document.getElementById("orderItemsTable").getElementsByTagName('tbody')[0];
        var newRow = table.insertRow();
        var productCell = newRow.insertCell(0);
        var quantityCell = newRow.insertCell(1);
        var priceCell = newRow.insertCell(2);
        var totalAmountCell = newRow.insertCell(3);
        var actionCell = newRow.insertCell(4);

        // Populate the cells with the selected product and quantity
        productCell.innerHTML = '<input name="OrderItems[' + table.rows.length + '].ProductId" value="' + product.productId + '" hidden />' +
            '<input class="form-control" value="' + product.name + '" readonly />';
        quantityCell.innerHTML = '<input name="OrderItems[' + table.rows.length + '].Quantity" value="' + quantity + '" class="form-control" readonly />';
        priceCell.innerHTML = '<input name="OrderItems[' + table.rows.length + '].Price" value="' + product.price + '" class="form-control" readonly />';
        totalAmountCell.innerHTML = '<input name="OrderItems[' + table.rows.length + '].TotalAmount" value="' + (quantity * product.price).toFixed(2) + '" class="form-control" readonly />';
        actionCell.innerHTML = '<button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>';

        updateIndices();
        updateTotalAmount();
    }

    function addProductFromModal() {
        var productId = document.getElementById("productId").value;
        var quantity = document.getElementById("quantity").value;

        if (productId && quantity > 0) {
            $.ajax({
                url: '@Url.Action("GetProductDetails", "Orders")',
                type: 'GET',
                data: { productId: productId },
                success: function (product) {
                    if (product) {
                        addRow(product, quantity);
                        $('#addProductModal').modal('hide');
                    }
                },
                error: function () {
                    console.error('Error fetching product details.');
                }
            });
        }
    }

    function removeRow(button) {
        var row = button.parentNode.parentNode;
        row.parentNode.removeChild(row);

        updateIndices();
        updateTotalAmount();
    }

    function updateIndices() {
        var table = document.getElementById("orderItemsTable").getElementsByTagName('tbody')[0];
        var rows = table.getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var inputs = rows[i].getElementsByTagName('input');
            for (var j = 0; j < inputs.length; j++) {
                var input = inputs[j];
                var name = input.getAttribute('name');
                if (name) {
                    input.setAttribute('name', name.replace(/\[(\d+)\]/, '[' + i + ']'));
                }
            }
        }
    }

    function updateTotalAmount() {
        var rows = document.getElementById("orderItemsTable").getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        var totalAmount = 0;

        for (var i = 0; i < rows.length; i++) {
            var totalAmountInput = rows[i].getElementsByTagName('input')[3];
            totalAmount += parseFloat(totalAmountInput.value) || 0;
        }

        document.getElementById("totalAmountInput").value = totalAmount.toFixed(2);
    }
</script>
